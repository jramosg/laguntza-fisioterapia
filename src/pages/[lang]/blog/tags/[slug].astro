---
import Layout from '@layouts/Page.astro';
import { Container } from '@components/odyssey-theme';
import { generateTagData } from '@utils/helpers.js';
import { MDXInstance } from 'astro';
import { settings } from '@config/settings';
import { Langs } from '@i18n/ui';
import type { Slug } from '@types';

type Paths = Array<{
	params: { slug: Slug; lang: Langs };
	props: { tag: string; posts: MDXInstance<Record<string, any>>[] };
}>;

type Categories = {
	slug: Slug;
	title: string;
};

export async function getStaticPaths(): Promise<Paths> {
	const allPosts = await Astro.glob(`@pages/es/blog/posts/*.mdx`);
	const sortedPosts = allPosts.sort(
		(a, b) =>
			new Date(b.frontmatter.date).valueOf() -
			new Date(a.frontmatter.date).valueOf(),
	);
	const allCategoriesUnique: Set<string> = new Set();

	sortedPosts.forEach(post => {
		post.frontmatter.tags &&
			post.frontmatter.tags.map((tag: string) => {
				allCategoriesUnique.add(tag);
			});
	});

	const allCategoriesData: Categories[] = generateTagData(allCategoriesUnique);
	// map through the categories array
	return allCategoriesData.map(tag => {
		// filter the posts that match the given category
		const posts = sortedPosts.filter(post =>
			post.frontmatter.tags.includes(tag.title),
		);
		return {
			params: { lang: 'es', slug: tag.slug },
			props: {
				tag: tag.title,
				posts: posts,
			},
		};
	});
}

const { tag, posts } = Astro.props;

const seo = {
	title: `${tag} | ${settings.title}`,
};
---

<Layout seo={seo}>
	<Container narrow>
		<section class="tag-page__section">
			<h1>Posts Tagged with "{tag}"</h1>
			<ul>
				{
					posts.map(post => (
						<li>
							<a href={post.url}>{post.frontmatter.title}</a>
						</li>
					))
				}
			</ul>
		</section>
	</Container>
</Layout>

<style>
	.tag-page__section {
		min-height: 60vh;
		margin: var(--section-margin);
	}
</style>
