---
import Layout from '@layouts/Page.astro';

import {
	getLangFromUrl,
	getStaticLangPaths,
	useTranslations
} from '@i18n/utils';
import Chip from '@components/Chip.astro';
import { Langs } from '@i18n/ui';
import SectionHero from '@components/SectionHero.astro';
import { Icon } from 'astro-icon/components';
import LeafletMap from '@components/LeafletMap.astro';
import Container from '@components/core/Container.astro';
import { Address, Email, Phone, WhatsApp } from '@config/company';
import PhoneIcon from '@icons/phone.svg';
import EmailIcon from '@icons/email.svg';
import Button from '@components/buttons/Button.astro';
import MarkerIcon from '@icons/marker.svg';
import ContactForm from '@components/forms/ContactForm.astro';
export function getStaticPaths() {
	return getStaticLangPaths();
}
const lang: Langs = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const whatsappUrl = `${WhatsApp.url}?text=${encodeURIComponent(
	t('whatsapp-msg')
)}`;

// SEO data for contact page
const seo = {
	title:
		lang === 'eu'
			? 'Laguntza Fisioterapia | Kontaktua - Zubitxo Plaza 3, Urnieta, Gipuzkoa - Tel: 943 036 070'
			: 'Laguntza Fisioterapia | Contacto - Zubitxo Plaza 3, Urnieta, Gipuzkoa - Tel: 943 036 070',
	description:
		lang === 'eu'
			? 'Kontaktuan jarri Laguntza Fisioterapia zentroarekin Urnietan. Zubitxo Plaza 3, 20130 Urnieta, Gipuzkoa. Telefonoa: 943 036 070. WhatsApp eta email eskuragarri. Ordutegia: astelehenetik ostiralera.'
			: 'Contacta con el centro de fisioterapia Laguntza en Urnieta. Zubitxo Plaza 3, 20130 Urnieta, Gipuzkoa. Teléfono: 943 036 070. WhatsApp y email disponibles. Horario: lunes a viernes.',
	keywords:
		lang === 'eu'
			? 'Laguntza Fisioterapia kontaktua, Urnieta fisioterapia, Zubitxo Plaza 3, telefonoa 943 036 070, WhatsApp fisioterapeuta, Gipuzkoa fisioterapia zentroa'
			: 'Laguntza Fisioterapia contacto, Urnieta fisioterapia, Zubitxo Plaza 3, teléfono 943 036 070, WhatsApp fisioterapeuta, Gipuzkoa centro fisioterapia'
};

const contacts = [
	{
		title: t('Telefonoz'),
		desc: t('Deitu'),
		id: 'phone',
		subdesc: t('working-hours'),
		ctas: [
			{ label: WhatsApp.name, href: WhatsApp.urlCall },
			{ label: Phone.name, href: Phone.url }
		]
	},
	{
		title: t('Emailez'),
		desc: Email.name,
		subdesc: t('we-respond-soon'),
		id: 'email',
		ctas: [{ label: t('Idatzi'), href: Email.url }]
	},
	{
		title: t('WhatsAppez'),
		id: 'whatsapp',
		desc: WhatsApp.name,
		subdesc: t('we-respond-inmediately'),
		ctas: [{ label: t('Bidali WhatsAppa'), href: whatsappUrl }]
	},
	{
		title: t('Bisitatu'),
		id: 'address',
		desc: Address.name,
		subdesc: t('working-hours'),
		ctas: [{ label: t('Ireki mapan'), href: Address.url }]
	}
];
---

<Layout {seo}>
	<SectionHero id="contact-hero" class="hero-section__contact">
		<h1 slot="title">
			{t('contact-jarri')}
			{' '}
			<span class="hero-section__remark">{t('contact-kontaktuan')}</span>
		</h1>
		<Fragment slot="desc">
			{
				t(
					'Kontaktuan jarri telefono, WhastaApp edo email bidez. Zuri laguntzeko prest gaude.'
				)
			}
		</Fragment>
		<Fragment slot="chips">
			<Chip text="Telefonoa" href={WhatsApp.urlCall}>
				<PhoneIcon slot="icon" />
			</Chip>
			<Chip
				text="Email"
				href="mailto:info@laguntzafisio.eus"
				target="_blank"
				rel="noopener noreferrer"
			>
				<EmailIcon slot="icon" />
			</Chip>
			<Chip
				text="WhatsApp"
				href={whatsappUrl}
				target="_blank"
				rel="noopener noreferrer"
			>
				<Icon slot="icon" name="ic:baseline-whatsapp" />
			</Chip>
		</Fragment>
	</SectionHero>
	<ContactForm />

	<div class="map-contact-data-grid">
		<Container tag="section" class="contact-data-section">
			<h2 class="contact-data-section__text">{t('Kontaktuan jarri')}</h2>
			<p class="contact-data-section__text">
				{t('Hurrengo moduetan jarri zaitezke harremanetan:')}
			</p>
			{
				contacts.map(item => {
					const icons = {
						phone: <PhoneIcon fill="currentColor" />,
						email: <EmailIcon fill="currentColor" />,
						whatsapp: <Icon name="ic:baseline-whatsapp" />,
						address: <MarkerIcon fill="currentColor" />
					} as const;
					const icon = icons[item.id as keyof typeof icons];
					return (
						<div
							class="contact-card card card--elevated"
							data-main-href={item.ctas[0].href}
						>
							<a
								class:list={[
									'contact-card__icon-container',
									`contact-card__icon-container-${item.id}`
								]}
								href={item.ctas[0].href}
								target="_blank"
								rel="noopener noreferrer"
							>
								{icon}
							</a>
							<h3 class="contact-card__title">{item.title}</h3>
							{item.desc && (
								<p
									class:list={[
										'contact-card__desc',
										item.id === 'email' ? 'contact-card__desc__email' : ''
									]}
								>
									{item.desc}
								</p>
							)}
							{item.subdesc && (
								<p class="contact-card__subdesc">{item.subdesc}</p>
							)}
							{item.ctas.map((cta, index) => (
								<Button
									outlined
									newTab
									href={cta.href}
									class:list={[
										`contact-card__icon-container-${item.id}`,
										'contact-card_cta',
										index !== 0 && 'contact-card_cta--secondary'
									]}
								>
									{icon} {cta.label}
								</Button>
							))}
						</div>
					);
				})
			}
		</Container>
		<Container tag="section" class="ubication-section">
			<h2>{t('Gure kokalekua')}</h2>
			<a href={Address.url} target="_blank" rel="noopener noreferrer">
				{Address.name}</a
			>
			<section class="leaflet-map-container">
				<LeafletMap
					latitude={43.24656113552193}
					longitude={-1.9932571315890595}
					zoom={17}
				/>
			</section>
		</Container>
	</div>
</Layout>

<style>
	@keyframes chip-bounce {
		0% {
			transform: translateY(0);
		}
		50% {
			transform: translateY(var(--s2));
		}
		100% {
			transform: translateY(0);
		}
	}

	.hero-section__contact :global(.chip) {
		animation: chip-bounce 2s ease-in-out infinite;
		&:nth-child(2) {
			animation-delay: 0.3s;
		}
		&:nth-child(3) {
			animation-delay: 0.6s;
		}
	}
	.ubication-section {
		width: 100%;
		a {
			opacity: 0.72;
			transition: opacity linear 150ms;
			border-radius: var(--theme-shape-radius);
		}
		a:hover {
			opacity: 1;
		}
	}
	.leaflet-map-container {
		height: 630px;
		width: 100%;
		overflow: hidden;
		border-radius: var(--theme-shape-radius);
		margin-top: var(--s4);
	}

	.map-contact-data-grid {
		display: grid;
		gap: var(--s4);
		grid-template-columns: auto minmax(640px, 1fr);
		margin: var(--s5) 0;
	}

	.contact-data-section {
		width: 100%;
		justify-content: flex-start;
		gap: var(--s4);
	}

	.contact-card {
		padding: var(--s6) var(--s4);
		display: flex;
		flex-direction: column;
		align-items: center;
		--size: 1.5rem;
		cursor: pointer;
		width: 100%;
		justify-self: center;
		p {
			margin: 0;
		}

		[data-icon] {
			font-size: var(--size);
		}

		svg {
			width: 1.5rem;
			height: 1.5rem;
		}
	}

	.contact-card:not(:last-child) {
		margin-bottom: var(--s4);
	}

	.contact-card:hover {
		.contact-card__title {
			color: var(--theme-primary);
		}
	}

	.contact-card.fade-in {
		opacity: 1;
		transform: translateY(0);
	}

	/* Consolidated icon-container styles using --rgb variable */
	.contact-card__icon-container {
		border-radius: 9999px;
		display: flex;
		padding: var(--s4);
		align-items: center;
		justify-content: center;
		/* default rgb fallback */
		--rgb: 0, 0, 0;
		background-color: rgb(var(--rgb));
		color: white;
		transition:
			background-color 160ms linear,
			opacity 160ms linear;
	}

	.contact-card__icon-container-phone {
		--rgb: 59, 130, 246;
	}
	.contact-card__icon-container-email {
		--rgb: 234, 67, 53;
	}
	.contact-card__icon-container-whatsapp {
		--rgb: 37, 211, 102;
	}
	.contact-card__icon-container-address {
		--rgb: 249, 115, 22;
	}

	.contact-card__icon-container:hover {
		background-color: rgba(var(--rgb), 0.85);
	}

	.contact-card__title {
		font-size: var(--font-size-base);
		font-weight: 700;
		transition: color 0.3s ease;
		margin-bottom: var(--s);
		margin: 0;
		margin-top: var(--s2);
	}

	p.contact-card__desc {
		font-size: var(--font-size-sm);
		text-align: center;
	}
	.contact-card__desc__email {
		word-break: break-all;
	}
	p.contact-card__subdesc {
		color: var(--theme-text-secondary);
		font-size: var(--font-size-sm);
		margin-top: var(--s2);
		margin-bottom: var(--s4);
		text-align: center;
	}

	.contact-card_cta {
		border-color: inherit;
		width: 100%;
		display: flex;
		gap: var(--s2);
		&:not(:first-of-type) {
			margin-top: var(--s2);
		}
		background-color: rgb(var(--rgb));
		border-color: rgb(var(--rgb));
		color: white;
		transition:
			background-color 160ms linear,
			opacity 160ms linear;
		&:hover {
			background-color: rgba(var(--rgb), 0.5);
		}
	}
	.contact-card_cta--secondary {
		background-color: transparent;
		border-color: rgb(var(--rgb));
		color: rgb(var(--rgb));
		&:hover {
			background-color: rgba(var(--rgb), 0.1);
		}
	}

	.contact-card__link {
		text-decoration: none;
	}

	@media (max-width: 1024px) {
		.map-contact-data-grid {
			display: flex;
			flex-direction: column;
			gap: var(--s8);
		}
	}

	@media (max-width: 1024px) and (min-width: 640px) {
		.contact-data-section {
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: 0;
			column-gap: var(--s4);
		}
		.contact-data-section__text {
			grid-column: 1 / 3;
		}
		.contact-card {
			height: calc(100% - var(--s4));
		}

		p.contact-card__subdesc,
		p.contact-card__desc {
			min-height: var(--s6);
		}
	}
</style>

<script>
	import { gsap } from 'gsap';
	import { ScrollTrigger } from 'gsap/ScrollTrigger';
	gsap.registerPlugin(ScrollTrigger);

	document.addEventListener('astro:page-load', () => {
		const cards: NodeListOf<HTMLElement> =
			document.querySelectorAll('.contact-card');
		if (cards.length) {
			cards.forEach(card => {
				gsap.fromTo(
					card,
					{ opacity: 0, y: 40 },
					{
						opacity: 1,
						y: 0,
						duration: 0.3,
						ease: 'power2.out',
						scrollTrigger: {
							trigger: card,
							start: 'top 85%',
							toggleActions: 'play none none none'
						}
					}
				);

				card.addEventListener('click', ev => {
					const target = ev.target;
					if (target instanceof Element) {
						if (target.tagName === 'A') return;
					}

					const href = card.dataset.mainHref;
					if (!href) return;

					const a = document.createElement('a');
					a.href = href;
					a.target = '_blank';
					a.rel = 'noopener noreferrer';
					// keep it visually hidden / non-disruptive
					a.style.display = 'none';
					document.body.appendChild(a);
					a.click();
					a.remove();
				});

				card.addEventListener('keydown', ev => {
					const key = (ev as KeyboardEvent).key;
					if (key === 'Enter') {
						ev.preventDefault();
						card.click();
					}
				});
			});
		}
	});
</script>
