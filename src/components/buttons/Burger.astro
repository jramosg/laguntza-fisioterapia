---
import type { NavItem } from '@config/nav';
import { useTranslations, getLangFromUrl } from '@i18n/utils';

type Props = {
	color?: 'white';
	navData?: NavItem[];
	id?: string;
	class?: string;
};
const { class: className, color, navData, ...rest }: Props = Astro.props;
const url = Astro.url;
const lang = getLangFromUrl(url);
---

<button
	class:list={[
		'burger',
		className,
		color === 'white' ? 'burger-icon__white' : '',
	]}
	{...rest}
>
	<span class="burger-icon"></span>
</button>

<style>
	.burger {
		height: 40px;
		place-items: center;
		cursor: pointer;
		outline: none;
		border: none;
		background-color: transparent;
		display: none;
	}
	.burger-icon {
		position: relative;
		width: 32px;
	}

	.burger-icon::before,
	.burger-icon::after {
		content: '';
		position: absolute;
		left: 0;
		width: 16px;
	}

	.burger-icon,
	.burger-icon::before,
	.burger-icon::after {
		display: block;
		border-radius: 2px;
		height: 2px;

		background-color: var(--theme-on-bg);
		transition:
			transform 0.3s ease-in-out,
			background-color 0.3s ease-in-out;
	}

	.burger-icon__white {
		.burger-icon,
		.burger-icon::after,
		.burger-icon::before {
			background-color: #fff;
		}
	}

	.burger-icon::before {
		top: -8px;
		left: 0;
	}

	.burger-icon::after {
		top: 8px;
		left: 16px;
	}

	.burger[open] .burger-icon {
		transform: rotate(-45deg);
	}
	.burger[open] .burger-icon::before {
		transform: rotate(90deg) translate(16px, -9px);
	}

	.burger[open] .burger-icon::after {
		transform: rotate(90deg) translate(-16px, 7px);
	}

	.burger[open] .burger-icon,
	.burger[open] .burger-icon::before,
	.burger[open] .burger-icon::after {
		background-color: var(--theme-on-primary);
	}

	.container-burger.burger[open] {
		.burger-icon,
		.burger-icon::before,
		.burger-icon::after {
			background-color: var(--theme-on-bg);
		}
	}
</style>
