---
import { getLangFromUrl, useTranslations, switchLanguage } from '@i18n/utils';
import CheckIcon from '@icons/check.svg';
import TranslateIcon from '@icons/translate.svg';
import ChevronRight from '@icons/chevron-right.svg';

const languages = [
	{ code: 'eu', name: 'Euskera', nativeName: 'Euskera' },
	{ code: 'es', name: 'Español', nativeName: 'Español' },
];

const url = Astro.url;
const lang = getLangFromUrl(url);
const t = useTranslations(lang);
---

<div class="language-toggle">
	<button
		id="lang-toggle-btn"
		type="button"
		aria-expanded="false"
		aria-haspopup="listbox"
		aria-label={`Current language: ${t(lang)}. Click to change language`}
		class="lang-toggle-btn"
	>
		<TranslateIcon class="translate-icon" fill="currentColor" />
		<span class="lang-code">{lang.toUpperCase()}</span>
		<ChevronRight class="chevron" />
	</button>
	<div
		id="lang-dropdown"
		class="lang-dropdown"
		hidden
		role="listbox"
		aria-label="Language selection"
	>
		{
			languages.map(language => (
				<a href={switchLanguage(url)}>
					<button
						type="button"
						class={`lang-option-btn lang-option${language.code === lang ? ' selected' : ''}`}
						role="option"
						aria-selected={language.code === lang}
						data-lang={language.code}
					>
						<span>{language.nativeName}</span>
						{language.code === lang && <CheckIcon fill="currentColor" />}
					</button>
				</a>
			))
		}
	</div>
</div>

<style>
	a {
		text-decoration: none;
	}
	.language-toggle {
		position: relative;
		height: 100%;
		button: 100%;
	}
	.lang-toggle-btn {
		display: flex;
		align-items: center;
		gap: 0.5em;
		min-width: 100px;
		padding: 0.3em 0.8em;
		border: unset;
		background: transparent;
		border-radius: 0.5em;
		cursor: pointer;
		font-size: 1em;
		opacity: 0.72;
		transition: opacity linear 150ms;
	}
	.lang-toggle-btn:focus {
		outline: 2px solid var(--theme-primary, #009688);
	}

	.lang-toggle-btn:hover {
		opacity: 1;
	}

	.chevron {
		transform: rotate(90deg);
		transition: transform 0.2s;
	}
	.lang-toggle-btn[aria-expanded='true'] .chevron {
		transform: rotate(-90deg);
	}
	.lang-dropdown {
		position: absolute;
		right: 0;
		margin-top: 0.3em;
		min-width: 140px;
		background: var(--theme-bg);
		border: 1px solid #e5e7eb;
		border-radius: 0.5em;
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
		z-index: 100;
	}
	.lang-option {
		width: 100%;
		text-align: left;
		padding: 0.5em 1em;
		background: none;
		border: none;
		font-size: 1em;
		cursor: pointer;
		display: flex;
		align-items: center;
		justify-content: space-between;
	}

	.lang-option-btn {
		border-radius: 0.5em;
	}
	.lang-option:hover,
	.lang-option:focus {
		background: var(--theme-primary-container-alt);
		outline: none;
	}
	.lang-option.selected {
		background: var(--theme-primary-container);
		color: var(--theme-on-primary-container);
		font-weight: 600;
	}
	.check {
		color: #009688;
	}
</style>
